-- dashing
go.property("dashing", false)
go.property("dash_cooldown", 3)
go.property("total_dashes", 1)
go.property("dash_distance", 250)

-- movement
go.property("speed", 250)
go.property("input", vmath.vector3())

-- items
go.property("coins", 0)


function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("/guis", "show_dashes", { dashes = self.total_dashes } )
	msg.post("/guis", "update_coins", { coins = self.coins } )
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	local pos = go.get_position()
	
	if vmath.length(self.input) > 1 then
		self.input = vmath.normalize(self.input)
	end

	if self.dashing then
		go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, pos + self.input * self.dash_distance, go.EASING_LINEAR, .2, 0, function()
			timer.delay(self.dash_cooldown, false, function()
				self.total_dashes = self.total_dashes + 1
				msg.post("/guis", "show_dashes", { dashes = self.total_dashes } )
			end)
		end)
		self.dashing = false
	end

	pos = pos + self.input * self.speed * dt
	go.set_position(pos)
	print(self.input)
	self.input = vmath.vector3()
end

function fixed_update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("give_coin") then
		self.coins = self.coins + 1
		msg.post("/guis", "update_coins", { coins = self.coins } )
	end
end

function on_input(self, action_id, action)
	if action_id == hash("right") then
		self.input.x = 1
	elseif action_id == hash("left") then
		self.input.x = -1
	end

	if action_id == hash("up") then
		self.input.y = 1
	elseif action_id == hash("down") then
		self.input.y = -1
	end

	if action_id == hash("spacebar") and action.released and self.input ~= vmath.vector3() then
		if self.total_dashes > 0 then
			self.total_dashes = self.total_dashes - 1
			self.dashing = true
			msg.post("/guis", "show_dashes", { dashes = self.total_dashes } )
		else
			print("out of dashes")
		end
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
